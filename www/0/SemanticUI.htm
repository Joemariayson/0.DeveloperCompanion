
<!DOCTYPE html>
<html>
<head>
  <!-- Standard Meta -->
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0">

  <title>Logic Cores - Declarative System Composition</title>

  <link rel="stylesheet" type="text/css" href="/cores/skin/for/semantic-ui/semantic.css">
  <style type="text/css">

  body {
    background-color: #FFFFFF;
  }
  .main.container {
    margin-top: 2em;
  }

  .main.menu {
    margin-top: 4em;
    border-radius: 0;
    border: none;
    box-shadow: none;
    transition:
      box-shadow 0.5s ease,
      padding 0.5s ease
    ;
  }
  .main.menu .item img.logo {
    margin-right: 1.5em;
  }

  .overlay {
    float: left;
    margin: 0em 3em 1em 0em;
  }
  .overlay .menu {
    position: relative;
    left: 0;
    transition: left 0.5s ease;
  }

  .main.menu.fixed {
    background-color: #FFFFFF;
    border: 1px solid #DDD;
    box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.2);
  }
  .overlay.fixed .menu {
    left: 800px;
  }

  .text.container .left.floated.image {
    margin: 2em 2em 2em -4em;
  }
  .text.container .right.floated.image {
    margin: 2em -4em 2em 2em;
  }

  .ui.footer.segment {
    margin: 5em 0em 0em;
    padding: 5em 0em;
  }
  </style>

</head>
<body>

  <div class="ui main text container">
    <h1 class="ui header">Declarative System Composition</h1>
    <p>Systems rot because they cannot be refactored and developers waste time because they cannot easily upgrade nor swap out components. We aim to <b>put an end to this waste!</b></p>
  </div>

  <div class="ui borderless main menu">
    <div class="ui text container">
      <div href="#" class="header item">
        <img class="logo" src="/img/0.png">
        Logic Cores
      </div>
      <a href="#" class="item" data-tab="introduction">Introduction</a>
      <a href="#" class="item" data-tab="install">Install</a>
      <a href="#" class="item" data-tab="learn">Learn</a>
    </div>
  </div>

  <div class="ui text container tab" data-tab="introduction">

Intro

  </div>
    
  <div class="ui text container tab" data-tab="install">

Install

  </div>

  <div class="ui text container tab" data-tab="learn">

Learn

  </div>

  <div class="ui inverted vertical footer segment">
    <div class="ui center aligned container">
      <div class="ui stackable inverted divided grid">
        <div class="eight wide column">
          <div class="ui inverted link list">
            <a href="https://github.com/LogicCores" class="item">Github Organization</a>
          </div>
        </div>
        <div class="eight wide column">
          <h4 class="ui inverted header">Why the Logic Cores project?</h4>
          <p>I <a href="http://christophdorn.com">Christoph Dorn</a> have been continuously searchig for the ultimate development environment and system and this project is my attempt to bring <i>declarative based system composition</i> to </i>NodeJS and JavaScript</i> application development. I believe we must start <i>declaring</i> how we wish to compose our applications (which are really systems) rather than <i>code</i> them. Declarative composition seems to be the underpinning of component-based development and demands more attention.</p>
        </div>
      </div>
      <div class="ui inverted section divider"></div>
      <div class="ui horizontal inverted small divided link list">
          Original <b>Source Logic</b> <a href="http://unlicense.org">UNLICENSED</a> by <a href="http://christophdorn.com">Christoph Dorn</a>
      </div>
    </div>
  </div>


  <script src="/cores/export/for/browserify/polyfills.js"></script>
  <script src="/cores/skin/for/semantic-ui/node_modules/jquery/dist/jquery.js"></script>
  <script src="/cores/skin/for/semantic-ui/semantic.js"></script>

  <script src="/cores/export/for/browserify/lib.js"></script>
  <script src="/cores/export/for/browserify/app.js"></script>

  <script>
  $(document)
    .ready(function() {

      // fix main menu to page on passing
      $('.main.menu').visibility({
        type: 'fixed'
      });
      $('.overlay').visibility({
        type: 'fixed',
        offset: 80
      });

      // lazy load images
      $('.image').visibility({
        type: 'image',
        transition: 'vertical flip in',
        duration: 500
      });

      // show dropdown on hover
      $('.main.menu  .ui.dropdown').dropdown({
        on: 'hover'
      });
      
      $('.menu .item').tab();
    });
  </script>
</body>

</html>
